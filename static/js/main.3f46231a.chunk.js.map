{"version":3,"sources":["home/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomeComponent","props","componentDidMount","setState","pages","state","totalQuestions","handleQuestion","currentSection","length","push","word","question","isName","this","map","item","index","text","React","Component","TypeWriter","handleClick","ev","stopPropagation","preventDefault","slice","setTypeWriter","typeWriter","setInterval","clearInterval","bind","name","imgUrl","className","style","backgroundImage","getImage","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyDRC,kBAAoB,WAClB,EAAKC,SAAS,CACVC,MAAO,EAAKC,MAAMC,kBA5DL,EAgEnBC,eAAiB,WACf,MAAgD,EAAKF,MAA/CD,EAAN,EAAMA,MAAOI,EAAb,EAAaA,eAAgBF,EAA7B,EAA6BA,eACzBE,EAAiBF,EAAeG,SAClCL,EAAMM,KAAKJ,EAAeE,IAC1B,EAAKL,SAAL,2BACK,EAAKE,OADV,IAEEG,eAAgBA,EAAiB,EACjCJ,aArEJ,EAAKC,MAAQ,CACXC,eAAgB,CACd,CACEK,KAAM,kDACNC,SAAU,iBAEZ,CACED,KAAM,gHACNC,SAAU,yBAEZ,CACED,KAAM,uFACNC,SAAU,gDAEZ,CACED,KAAM,iDACNC,SACE,wEAEJ,CACED,KAAM,2IACNC,SAAU,gCAEZ,CACED,KAAM,uEACNC,SAAU,6BAEZ,CACED,KAAM,oFACNC,SAAU,YACVC,OAAQ,SAEV,CACEF,KAAM,kGACNC,SAAU,4CACVC,OAAQ,YAEV,CACEF,KAAM,uJACNC,SAAU,4CACVC,OAAQ,YAEV,CACEF,KAAM,GACNC,SAAU,8CAGdR,MAAO,CACL,CACEO,KAAM,kDACNC,SAAU,kBAGdJ,eAAgB,GAvDD,E,0CA4EnB,WAAU,IAAD,OACP,EAAgCM,KAAKT,MAA/BD,EAAN,EAAMA,MAAOI,EAAb,EAAaA,eACb,OAAOJ,EAAMW,KAAI,SAACC,EAAMC,GACtB,OACEA,EAAQT,GACN,cAAC,EAAD,CAEEU,KAAMF,EAAKL,KACXE,OAAQG,EAAKH,OACbD,SAAUI,EAAKJ,SACfL,eAAgB,EAAKA,gBAJhB,QAAUU,U,GAnFCE,IAAMC,WA+FrBC,EAAb,kDACE,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAyBRqB,YAAc,SAACC,GACbA,EAAGC,kBACHD,EAAGE,iBACCF,GACF,EAAKtB,MAAMM,kBA5Bb,EAAKF,MAAQ,CACXqB,MAAO,IAHQ,EADrB,qDAOE,WACEZ,KAAKa,cAAcb,KAAKb,MAAMiB,QARlC,2BAWE,SAAcP,GACZ,IAAIM,EAAQ,EACRW,EAAaC,YACf,WACEf,KAAKX,SAAS,CACZuB,MAAOf,EAAKe,MAAM,EAAGT,MAEvBA,GAAS,GAEGN,EAAKF,QACfqB,cAAcF,IAEhBG,KAAKjB,MACP,KAxBN,sBAkCE,SAASkB,GACP,IAAIC,EAAS,GACb,OAAQD,GACN,IAAK,QACHC,EACE,sBAKN,OAAO,sBAAMC,UAAU,QAAQC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAT,UA5C3D,oBA8CE,WAAU,IAAD,OACDP,EAAUZ,KAAKT,MAAfqB,MACN,EAAiCZ,KAAKb,MAAhCW,EAAN,EAAMA,SAAUM,EAAhB,EAAgBA,KAAML,EAAtB,EAAsBA,OACtB,OACE,0BAASqB,UAAU,UAAnB,UACE,uBAAMA,UAAU,kBAAhB,UACGrB,EAASC,KAAKuB,SAASxB,GAAU,GACjCa,KAEFA,EAAMjB,SAAWS,EAAKT,QACrB,qBAAKyB,UAAU,WAAf,SACE,sBAAMI,QAAS,SAACf,GAAD,OAAQ,EAAKD,YAAYC,IAAxC,SAA8CX,aAzD1D,GAAgCO,IAAMC,WAiEvBpB,ICxJAuC,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACG,cAAC,EAAD,OCMQM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f46231a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass HomeComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalQuestions: [\r\n        {\r\n          word: \"As you know, today is my last working day in EY\",\r\n          question: \"I didn't knew\",\r\n        },\r\n        {\r\n          word: \"Ok, then... As you sure donÂ´t know yet, aside from my only couple of teammates, today is my last day in EY\",\r\n          question: \"Oh, well... Ok.. So ?\",\r\n        },\r\n        {\r\n          word: \"So what? Thank you all for all the learning and maturing this job has gifted me with\",\r\n          question: \"Ok Thanks to you too!, whats your next plan?\",\r\n        },\r\n        {\r\n          word: \"Somewhere else, doing the same things probably\",\r\n          question:\r\n            \"Oh is it? then why you wanted to change if it will be as same as EY?\",\r\n        },\r\n        {\r\n          word: \"Just for fun, I felt it is not the perfect time to settle somewhere safe and comfortable, so taking the risks and going for an adventure\",\r\n          question: \"Oh, well, any special thanks\",\r\n        },\r\n        {\r\n          word: \"Yeah, you bet, how can I go without thanking those who were with me?\",\r\n          question: \"That's good, Who's first?\",\r\n        },\r\n        {\r\n          word: \"Anand, who was my mentor and my lead, who guided me personally and professionally\",\r\n          question: \"Then who?\",\r\n          isName: \"Anand\",\r\n        },\r\n        {\r\n          word: \"Prateesh, my counsellor, who helped me to understand EY better, taught me the processes and etc\",\r\n          question: \"hmm, seems like a professional, then who?\",\r\n          isName: \"Prateesh\",\r\n        },\r\n        {\r\n          word: \"Then.. Shaswath and Sreenu, how can I forget you guys. Even though we were in only a few projects, our collaborative work made the dream work happen\",\r\n          question: \"hmm, seems like a professional, then who?\",\r\n          isName: \"Shaswath\",\r\n        },\r\n        {\r\n          word: \"\",\r\n          question: \"hmm, seems like a professional, then who?\",\r\n        },\r\n      ],\r\n      pages: [\r\n        {\r\n          word: \"As you know, today is my last working day in EY\",\r\n          question: \"I didn't knew\",\r\n        },\r\n      ],\r\n      currentSection: 1,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.setState({\r\n        pages: this.state.totalQuestions\r\n    })\r\n  }\r\n\r\n  handleQuestion = () => {\r\n    let { pages, currentSection, totalQuestions } = this.state;\r\n    if (currentSection < totalQuestions.length) {\r\n      pages.push(totalQuestions[currentSection]);\r\n      this.setState({\r\n        ...this.state,\r\n        currentSection: currentSection + 1,\r\n        pages,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { pages, currentSection } = this.state;\r\n    return pages.map((item, index) => {\r\n      return (\r\n        index < currentSection && (\r\n          <TypeWriter\r\n            key={\"type_\" + index}\r\n            text={item.word}\r\n            isName={item.isName}\r\n            question={item.question}\r\n            handleQuestion={this.handleQuestion}\r\n          />\r\n        )\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport class TypeWriter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      slice: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setTypeWriter(this.props.text);\r\n  }\r\n\r\n  setTypeWriter(word) {\r\n    var index = 0;\r\n    var typeWriter = setInterval(\r\n      function () {\r\n        this.setState({\r\n          slice: word.slice(0, index),\r\n        });\r\n        index += 1;\r\n\r\n        if (index > word.length) {\r\n          clearInterval(typeWriter);\r\n        }\r\n      }.bind(this),\r\n      0\r\n    );\r\n  }\r\n  handleClick = (ev) => {\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n    if (ev) {\r\n      this.props.handleQuestion();\r\n    }\r\n  };\r\n  getImage(name) {\r\n    let imgUrl = '';\r\n    switch (name) {\r\n      case \"Anand\":\r\n        imgUrl =\r\n          \"../assets/Anand.jpg\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return <span className=\"image\" style={{ backgroundImage: `url(${imgUrl})` }}></span>;\r\n  }\r\n  render() {\r\n    let { slice } = this.state;\r\n    let { question, text, isName } = this.props;\r\n    return (\r\n      <section className=\"eachrow\">\r\n        <span className=\"typewriter-text\">\r\n          {isName ? this.getImage(isName) : \"\"}\r\n          {slice}\r\n        </span>\r\n        {slice.length === text.length && (\r\n          <div className=\"question\">\r\n            <span onClick={(ev) => this.handleClick(ev)}>{question}</span>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import './App.css';\nimport HomeComponent from './home//home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <HomeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}